name: Build Linux

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  build:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev libnotify-dev libayatana-appindicator3-dev rpm libfuse2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Build Linux
        run: flutter build linux --release

      - name: Check build output
        run: |
          if [ ! -d "build/linux/x64/release/bundle" ]; then
            echo "构建目录不存在，请确保 Flutter 构建已完成"
            exit 1
          fi

      - name: Create DEB package
        run: |
          mkdir -p packaging/deb/pienews/DEBIAN
          mkdir -p packaging/deb/pienews/usr/lib/pienews
          mkdir -p packaging/deb/pienews/usr/bin
          mkdir -p packaging/deb/pienews/usr/share/applications
          mkdir -p packaging/deb/pienews/usr/share/icons/hicolor/512x512/apps

          # Create control file
          cat > packaging/deb/pienews/DEBIAN/control << EOF
          Package: pienews
          Version: ${{ inputs.version }}
          Section: net
          Priority: optional
          Architecture: amd64
          Depends: libgtk-3-0, libnotify4
          Maintainer: PieNews Team <your.email@example.com>
          Description: PieNews RSS Reader
           A modern RSS reader built with Flutter.
          EOF

          cp -r build/linux/x64/release/bundle/* packaging/deb/pienews/usr/lib/pienews/
          ln -s /usr/lib/pienews/pienews packaging/deb/pienews/usr/bin/pienews

          cp assets/icons/app_icon.png packaging/deb/pienews/usr/share/icons/hicolor/512x512/apps/pienews.png

          cat > packaging/deb/pienews/usr/share/applications/pienews.desktop << EOF
          [Desktop Entry]
          Name=PieNews
          Comment=RSS Reader
          Exec=/usr/lib/pienews/pienews
          Icon=pienews
          Terminal=false
          Type=Application
          Categories=Network;News;
          StartupWMClass=pienews
          EOF

          # Set correct permissions
          chmod -R 755 packaging/deb/pienews/usr/bin
          chmod -R 755 packaging/deb/pienews/usr/lib/pienews
          chmod 644 packaging/deb/pienews/usr/share/applications/pienews.desktop
          chmod 644 packaging/deb/pienews/usr/share/icons/hicolor/512x512/apps/pienews.png
          chmod 755 packaging/deb/pienews/DEBIAN
          chmod 644 packaging/deb/pienews/DEBIAN/control

          cd packaging/deb
          dpkg-deb --build pienews .
          cd ../..

          mkdir -p release-linux
          mv packaging/deb/pienews_${{ inputs.version }}_amd64.deb release-linux/PieNews-${{ inputs.version }}-Linux-x64.deb

      - name: Create RPM package
        run: |
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp -r build/linux/x64/release/bundle/* ~/rpmbuild/SOURCES/
          mkdir -p ~/rpmbuild/SOURCES/data/flutter_assets/assets/icons
          cp assets/icons/app_icon.png ~/rpmbuild/SOURCES/data/flutter_assets/assets/icons/
          cp packaging/rpm/pienews.spec ~/rpmbuild/SPECS/

          rpmbuild -bb --define "version ${{ inputs.version }}" ~/rpmbuild/SPECS/pienews.spec

          mkdir -p release-linux
          cp ~/rpmbuild/RPMS/x86_64/pienews-${{ inputs.version }}-1.*.rpm release-linux/PieNews-${{ inputs.version }}-Linux-x64.rpm

      - name: Create AppImage
        run: |
          mkdir -p AppDir
          cp -r build/linux/x64/release/bundle/* AppDir/
          cp assets/icons/app_icon.png AppDir/

          # Create .desktop file
          cat > AppDir/pienews.desktop << EOF
          [Desktop Entry]
          Name=PieNews
          Exec=pienews
          Icon=app_icon
          Type=Application
          Categories=Network;News;
          EOF

          cat > AppDir/AppRun << 'EOF'
          #!/bin/sh
          cd "$(dirname "$0")"
          export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${PWD}/lib"
          exec "${PWD}/pienews" "$@"
          EOF

          chmod +x AppDir/AppRun
          chmod +x AppDir/pienews

          wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

          ./appimagetool-x86_64.AppImage --appimage-extract-and-run AppDir release-linux/PieNews-${{ inputs.version }}-Linux-x64.AppImage

      - name: Generate checksums
        run: |
          cd release-linux
          sha256sum * > checksums.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: release-linux/
