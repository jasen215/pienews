// Mocks generated by Mockito 5.4.4 from annotations
// in pienews/test/widget/article_list_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:flutter/cupertino.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:pienews/models/article.dart' as _i5;
import 'package:pienews/models/feed.dart' as _i3;
import 'package:pienews/providers/feed_provider.dart' as _i4;
import 'package:pienews/providers/font_provider.dart' as _i10;
import 'package:pienews/services/api/api_client.dart' as _i6;
import 'package:pienews/services/sync_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSyncService_0 extends _i1.SmartFake implements _i2.SyncService {
  _FakeSyncService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeed_1 extends _i1.SmartFake implements _i3.Feed {
  _FakeFeed_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FeedProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFeedProvider extends _i1.Mock implements _i4.FeedProvider {
  @override
  List<_i3.Feed> get feeds => (super.noSuchMethod(
        Invocation.getter(#feeds),
        returnValue: <_i3.Feed>[],
        returnValueForMissingStub: <_i3.Feed>[],
      ) as List<_i3.Feed>);

  @override
  List<_i5.Article> get articles => (super.noSuchMethod(
        Invocation.getter(#articles),
        returnValue: <_i5.Article>[],
        returnValueForMissingStub: <_i5.Article>[],
      ) as List<_i5.Article>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i2.SyncService get syncService => (super.noSuchMethod(
        Invocation.getter(#syncService),
        returnValue: _FakeSyncService_0(
          this,
          Invocation.getter(#syncService),
        ),
        returnValueForMissingStub: _FakeSyncService_0(
          this,
          Invocation.getter(#syncService),
        ),
      ) as _i2.SyncService);

  @override
  int get filterIndex => (super.noSuchMethod(
        Invocation.getter(#filterIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get previousFilterIndex => (super.noSuchMethod(
        Invocation.getter(#previousFilterIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  List<_i3.Feed> get filteredFeeds => (super.noSuchMethod(
        Invocation.getter(#filteredFeeds),
        returnValue: <_i3.Feed>[],
        returnValueForMissingStub: <_i3.Feed>[],
      ) as List<_i3.Feed>);

  @override
  List<_i5.Article> get filteredArticles => (super.noSuchMethod(
        Invocation.getter(#filteredArticles),
        returnValue: <_i5.Article>[],
        returnValueForMissingStub: <_i5.Article>[],
      ) as List<_i5.Article>);

  @override
  Map<String, List<_i3.Feed>> get groupedFeeds => (super.noSuchMethod(
        Invocation.getter(#groupedFeeds),
        returnValue: <String, List<_i3.Feed>>{},
        returnValueForMissingStub: <String, List<_i3.Feed>>{},
      ) as Map<String, List<_i3.Feed>>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void updateApiClient(_i6.ApiClient? newApiClient) => super.noSuchMethod(
        Invocation.method(
          #updateApiClient,
          [newApiClient],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void init(_i7.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #init,
          [context],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void switchService(_i6.ApiClient? newApiClient) => super.noSuchMethod(
        Invocation.method(
          #switchService,
          [newApiClient],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateService() => super.noSuchMethod(
        Invocation.method(
          #updateService,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int getDisplayCount(_i3.Feed? feed) => (super.noSuchMethod(
        Invocation.method(
          #getDisplayCount,
          [feed],
        ),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i8.Future<void> syncWithServer({DateTime? since}) => (super.noSuchMethod(
        Invocation.method(
          #syncWithServer,
          [],
          {#since: since},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> refreshFeed(_i3.Feed? feed) => (super.noSuchMethod(
        Invocation.method(
          #refreshFeed,
          [feed],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> refresh(_i7.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [context],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> loadLocalArticles(String? feedId) => (super.noSuchMethod(
        Invocation.method(
          #loadLocalArticles,
          [feedId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> fetchArticles(String? feedId) => (super.noSuchMethod(
        Invocation.method(
          #fetchArticles,
          [feedId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> markArticleAsRead(String? articleId) => (super.noSuchMethod(
        Invocation.method(
          #markArticleAsRead,
          [articleId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFilterIndex(int? index) => super.noSuchMethod(
        Invocation.method(
          #setFilterIndex,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> markCurrentArticlesAsRead() => (super.noSuchMethod(
        Invocation.method(
          #markCurrentArticlesAsRead,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i5.Article?> toggleArticleStarred(String? articleId) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleArticleStarred,
          [articleId],
        ),
        returnValue: _i8.Future<_i5.Article?>.value(),
        returnValueForMissingStub: _i8.Future<_i5.Article?>.value(),
      ) as _i8.Future<_i5.Article?>);

  @override
  _i8.Future<_i3.Feed> addFeed(String? feedUrl) => (super.noSuchMethod(
        Invocation.method(
          #addFeed,
          [feedUrl],
        ),
        returnValue: _i8.Future<_i3.Feed>.value(_FakeFeed_1(
          this,
          Invocation.method(
            #addFeed,
            [feedUrl],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i3.Feed>.value(_FakeFeed_1(
          this,
          Invocation.method(
            #addFeed,
            [feedUrl],
          ),
        )),
      ) as _i8.Future<_i3.Feed>);

  @override
  _i8.Future<void> addFeedAndSync(String? feedUrl) => (super.noSuchMethod(
        Invocation.method(
          #addFeedAndSync,
          [feedUrl],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  List<_i5.Article> getArticles(String? feedId) => (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [feedId],
        ),
        returnValue: <_i5.Article>[],
        returnValueForMissingStub: <_i5.Article>[],
      ) as List<_i5.Article>);

  @override
  _i8.Future<void> fetchAllArticles() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllArticles,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  bool hasNextArticle(_i5.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #hasNextArticle,
          [article],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool hasPreviousArticle(_i5.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #hasPreviousArticle,
          [article],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Article? getNextArticle(_i5.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #getNextArticle,
          [article],
        ),
        returnValueForMissingStub: null,
      ) as _i5.Article?);

  @override
  _i5.Article? getPreviousArticle(_i5.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #getPreviousArticle,
          [article],
        ),
        returnValueForMissingStub: null,
      ) as _i5.Article?);

  @override
  _i8.Future<_i5.Article?> toggleArticleRead(String? articleId) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleArticleRead,
          [articleId],
        ),
        returnValue: _i8.Future<_i5.Article?>.value(),
        returnValueForMissingStub: _i8.Future<_i5.Article?>.value(),
      ) as _i8.Future<_i5.Article?>);

  @override
  _i5.Article? getArticle(String? articleId) => (super.noSuchMethod(
        Invocation.method(
          #getArticle,
          [articleId],
        ),
        returnValueForMissingStub: null,
      ) as _i5.Article?);

  @override
  _i8.Future<_i3.Feed?> markAllAsRead(String? feedId) => (super.noSuchMethod(
        Invocation.method(
          #markAllAsRead,
          [feedId],
        ),
        returnValue: _i8.Future<_i3.Feed?>.value(),
        returnValueForMissingStub: _i8.Future<_i3.Feed?>.value(),
      ) as _i8.Future<_i3.Feed?>);

  @override
  _i8.Future<void> loadFeeds() => (super.noSuchMethod(
        Invocation.method(
          #loadFeeds,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i3.Feed? getNextUnreadFeed(String? currentFeedId) => (super.noSuchMethod(
        Invocation.method(
          #getNextUnreadFeed,
          [currentFeedId],
        ),
        returnValueForMissingStub: null,
      ) as _i3.Feed?);

  @override
  void clearAll() => super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> syncAll() => (super.noSuchMethod(
        Invocation.method(
          #syncAll,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> syncFeeds() => (super.noSuchMethod(
        Invocation.method(
          #syncFeeds,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> syncArticles() => (super.noSuchMethod(
        Invocation.method(
          #syncArticles,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> syncFeed(String? feedId) => (super.noSuchMethod(
        Invocation.method(
          #syncFeed,
          [feedId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FontProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFontProvider extends _i1.Mock implements _i10.FontProvider {
  @override
  double get fontScale => (super.noSuchMethod(
        Invocation.getter(#fontScale),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get minFontSize => (super.noSuchMethod(
        Invocation.getter(#minFontSize),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get maxFontSize => (super.noSuchMethod(
        Invocation.getter(#maxFontSize),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i8.Future<void> setFontSize(double? scale) => (super.noSuchMethod(
        Invocation.method(
          #setFontSize,
          [scale],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  String getFontSizeLabel(_i7.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #getFontSizeLabel,
          [context],
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #getFontSizeLabel,
            [context],
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #getFontSizeLabel,
            [context],
          ),
        ),
      ) as String);

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
